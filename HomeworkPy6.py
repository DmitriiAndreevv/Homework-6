
# 1

# Дан список: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками (добавить кавычку до и кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']

# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов

# Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже. Главное: дополнить числа до двух разрядов нулём!

# list1 = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

# Leng: int = len(list1)
# store_id = (list1)
# for i in range(Leng):
#     el = list1.pop(0)
#     if el.isdigit():
#         list1.append(f'"{int(el):02d}"')
#     elif el[0] == '+' and el[1].isdigit():
#         list1.append(f'+{int(el):02d}')
#     else:
#         list1.append(el)
# print(' '.join(list1))

# 2

# Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже. Главное: дополнить числа до двух разрядов нулём!

# * (вместо задачи 2) Решить задачу 2 не создавая новый список (как говорят, in place). Эта задача намного серьёзнее, чем может сначала показаться.
# Дан список, содержащий искажённые данные с должностями и именами сотрудников: ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']


# hello = 'Привет, {}!'

# wrong_file = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА','токарь высшего разряда нИКОЛАй', 'директор аэлита']

# for right_file in wrong_file:
#      print(hello.format(right_file.split()[-1].title()))

#3

# Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]

# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

# list = [57.8, 46.51, 97, 66, 19.48, 83, 33.11, 55, 7.77, 49]

# def prices(list1):
#     result = []
#     for i in list1:

#         if i%1 !=0:
#             change=str(round((i%1),2)).replace('0','',1).replace('.','')
#             print()
#             result.append(str(int(i//1)) + ' руб ' + change + ' коп')
#         else:
#             result.append(str(i) + ' руб 00 коп')
#     return result

# print(prices(list))

# list.sort()
# print(prices(list))


# list1 = list

# list1.sort(reverse=True)
# print(prices(list1))

# top5 =[]
# s = 0
# for i in list1:
#     top5.append(i)
#     s+= 1
#     if s == 5:
#         break
    
# top5.sort()

# print(prices(top5))
